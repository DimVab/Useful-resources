 Идеальный коммит
Стандарт Conventional Commits

1) в комментарии писать, что коммитить (решение конкретной задачи)
2) язык - тот, на котором общается команда

Шаблон коммита:
<type>(<scope>): <subject> - Заголовок коммита
<body> - Тело, необязательная часть
<footer> - Нижний колонтитул, необязательная часть 

type - характер внесённых в код изменений:
- feat - добавление новой функциональности в проект (блок кода: шапка, футер и тп)
- fix - исправление ошибок в коде
- style - визуальные исправления в коде (стили, табуляция, отступы, знаки препинания)
- refactor - переработка кода (изменение порядка написания, дробление кода и тп)

subject - развёрнутое описание блока type

Примеры:
git commit -m "feat: добавить адаптив для мобильных и планшетов"
"fix: оптимизировать изображения для мобильных устройств" 
"refactor: удалить лишние обёртки из подвала"
"style: изменить отступы на главной странице" 


2. Ветки
1) Рекомендуется в ветке main сдавать проект
2) В ветке develop осуществлять разработку, а потом слить с main
3) Features - для создания различных блоков (таких веток мб много). Потом коммиты переносят в develop, а ветку удаляют
4) hotfixes - для исправления ошибок

Примеры веток features и hotfixes:
feature/header
feature/contact-form
feature/insert-card

hotfix/bem-naming
hotfix/mobile-layout-400
hotfix/card-duplicates

Процесс:
1) В начале весь код сливают из main в develop
2) Создают функциональные ветки feature/...
3) Из feature сливают в develop, а feature/... удаляют
4) Тестируют и отлаживают в develop
5) сливают из develop в main
6) ревью
7) создают hotfix/... и исправляют баги
8) сливают в main, а hotfix/... удаляют