1. Трансформации - изменения форм элементов
св-во transform

значения трансформации:

1) matrix(n1, n2, n3, n4, n5, n6), где:

n1 - кратное измененеие  масштаба по горизонтали
n2 - скос по вертикали (положит знач поднимает левую половину и опускает правую, отриц - наоборот). Элемент стремится к вертикальной линии
n3 - скос по горизонтали (полож знач наклоняет элемент влево, отриц - вправо). Элемент стремится к горизонтальной линии.
n4 - кратное изменение масштаба по вертикали
n5 - сдвиг по оси X в пикселях
n6 - сдвиг по оси Y в пикселях

2) translate(n1, n2), где:
n1 - смещение по горизонтали в px
n2 - смещение по вертикали в px

3) scale(n1, n2), где:
n1 - кратное измененеие  масштаба по горизонтали
n2 - кратное изменение масштаба по вертикали
(либо общее значение масштабирования)

4) rotate(n), где:
n - наклон элемента в градусах (напр, 30deg)

5) skew(n1, n2), где:
n1 - наклон в градусах в лево (стремление к горизонтали (90deg)
n2 - скос в градусах левой стороны в верх (стремление к вертикали (90deg)


* отрицательные значение поворачивают наоборот

** также есть трёхмерные трансформации, создащие эффект псевдо-3D

2. Св-во transition - эффекты трансформации
Задаются  в общем свойстве либо по отдельности:
transition: background-color 1s linear 2s;
(* не забывать, что десятые доли секунды записываются через точку 0,4сек = .4s)

transition-property - какие именно свойства должны меняться плавно

transition-duration - продолжительность перехода в секундах

transition-timing-function - функция отсчёта времени: ускорение, замедление или линейная трансформация. Значения:
- ease (непринуждённо)
- linear (линейно)
- ease-in (осторожно)
- ease-out (отпустить)
- ease-in-out (сначала осторожно, потом отпустить)
Либо вручную значением кривой Безье:
transition-timing-function: cubic-bezier(1,.2,.52,.46); 

transition-delay - задержка в секундах между изменениями

Если данные свойства задаются в начальном селекторе, то будут применяться к любым изменениям

Если же к изменяющему селектору, типа div:hover, то применяться будут только для него


3. Тени
Применяются к блочным элементам и текстам
Св-ва: 
- box-shadow
- text-shadow

Значения:
1) горизонтальный сдвиг тени
2) вертикальный сдвиг тени
3) ражиус расмытия тени (чем больше, тем шире и светлей
4) цвет тени

Пример: box-shadow: 5px 6px 7px red;

Тень без сдвига называется размытая (blur)
Другая - тень со сдвигом


4. Градиенты
Градиент - плавный переход из одного цвета в другой

Свойство: background-image
1) Значение - функция linear-gradient(направление, начальный цвет, конечный цвет)

пример: background-image: linear-gradient(to bottom, black, white)

Либо указывают 2 цвета без направления:
background-image: linear-gradient(#0078FF, #C2E3E3);
Тогда по умолчанию направление будет сверху вниз

Вместо направления можно задать поворот градиента в градусах:
background-image: linear-gradient(90deg, #0078FF, #C2E3E3);

Сложные градиенты могут включать более 2 цветов. После указания каждого цвета можно задать интервал, в котором нужно применить цвет (начальная и финальная точки)
background-image: linear-gradient(#0078FF 0px 100px, #B4DEEF 100px 200px, #FF5A0A 200px 300px)
С интервалом будут чёткие границы, без интервала - размытые

Границы перехода можно определить в процентах:
background-image: linear-gradient(#0078FF 20%, #C2E3E3 100%)

2) радиальный градиент - цвета расходятся от центра
значание: функция radial-gradient(центр градиента, начальный цвет, конечный цвет)
либо без центра только с 2 цветами
background-image: radial-gradient(#0078FF, #C2E3E3)

по умолчанию центр градиента в середине блока
центр градиента можно сместить ключевым словом at и 2 точками:
background-image: radial-gradient(at 40px 50px, #0078FF, #C2E3E3);
Смещение происходит не от центра, а от крайних точек: верха и лева

Можно делать с несколькими цветами и переломами в процентах
background-image: radial-gradient(#002918 10%, #B4DEEF 20%, #FFFFFF 50%, #FF5831 100%)

Если задать в начале ширину и высоту, то они будут задавать размер центра градиента, превращая его в эллипс или овал


5. Overflow - записан в списках св-в CSS

6. Кейфреймы (ключевые кадры)
Ключевые кадры - те кадры, в которых мы задаём состояние элемента (начальный и конечный) в анимациях и переходах

Их принято прописывать в самом начале CSS-файла

Остальные кадры рассчитываются браузером самостоятельно

Кейфреймы объявляются директивой @keyframem
Затем идут имя и тело кейфрейма
@keyframes name_of_keymrame {
  styles:...;
}

Каждый ключевой кадр описывается в теле и привязывается к % (0 - начало, 100 - конец)
@keyframes name_of_keymrame {
  0% {
	....
  }
  100%{
	....
  }
}

Если состояния всего 2, то пишется:
@keyframes name {
   from {...}
   to {...}
}


7. Анимации
Группа св-в animation
Обяз необходимо указать подсвойства:
1) animation-name - имя набора кейфреймов
2) animation-duration - время анимации

div {
    animation-name: move;
    animation-duration: 2s;
} 

Сокращённо: animation: move 2s;

Необязательные св-ва:
3) animation-timing-function: linear, ease-in, ease-in-out, ease, ease-out, куб Безье - функция времени (ускорение и замедление)
4) animation-delay - задержка перед стартом в секундах
5) animation-iteration-count - сколько раз запустить анимацию: число либо infinite - бесконечно
6) animation-direction - направление анимации: normal - от начала к концу, reverse - наоборот, alternate - от начала к концу и обратно, alternate-reverse - от конца к началу и обратно
7) animation-fill-mode - как элемент ведёт себя после завершения анимации:
- forwards - сохранение в том состоянии,в каком он оказался после выполнения анимации
- backwards - вернёт состояние до начала анимации
- both - сначала в начальном положении столько, сколько указано в задержке, по окончании анимации - последний кадр
8) animation-paly-state - указывает, запущена анимация или нет
running - запускает анимацию
paused - останавливает
Используется в JS, запуская и останавливая анимацию при различных событиях

Дополнительные значения для большинства этих св-в:
initial - исходное состояние элемента на момент загрузки страницы
inherit - унаследовать состояние элемента от родителя

Сокращённая запись:
 animation: move 2s ease-in-out 1s 3 reverse forwards running;
порядок св-в неваженв
* но задержка располагается обязательно позже длительности