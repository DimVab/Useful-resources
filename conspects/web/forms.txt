1. Форма - компонент страницы для получения информации от пользователя (для отправки данных на сервер)
Виды:
- кнопки
- переключатели
- флажки
- поля с выпадающими списками
- поля ввода текста

Тэг <form></form>

form сопровождается атрибутами, чтобы заработать

атрибуты:
action - ссылка на обработчик (какой программе отдавать данные)
method - получить или отправить данные с сервера/на сервер
- GET (получить)
- POST (отправить)

2. Филдсеты - блоки внутри форм, которые объединяют однородные группы полей для сбора информации
Например, группы:
- для контактной информации
- для информации о доставке

Тэг <fieldset></fieldset>

* по умолчанию fieldset сопровождается серой рамкой, но её обычно сбрасывают  normalise.css или в style.css

3. Input - поле ввода (одиночный тэг)
Атрибуты:

3.1) type - тип поля ввода. Значения:

type="..."
1) text - текст
2) number - числа (на телефонах появляется клавиатура с цифрами)
3) email - эл почта. Браузер проверяет, есть ли в этом поле .@
4) password - пароли. Вместо символов отображаются звёздочки или точки
5) tel - номера телефонов. Отобразится цифровая  клавиатура
6) url - адрес сайта
7) range - ползунок
8) color - выбор цвета

9) date - дата без времени (появляется календарь)
10) datetime-local - дата со временем
11) month - месяц и год
12) week - неделя и год
13) time - время

13) file - загрузка файла
14) reset - сбросить
15) submit - отправить
16) image - отправить картинку
*также атрибуты submit и reset работают с тэгом button (так делают чаще)

17) radio - поле единичного выбора
18) checkbox - поле множественного выбора

3.2) disabled - блокировка заполнения поля
3.3) min - минимальное значение (для чисел, ползунков)
3.4) max - максимальное значение
создаётся диапазон
3.5) step - шаг изменения числа/бегунка (step="10" - каждое нажание изменяет число на 10)
3.6) id - задаётся для связывания с тэгом <label>. Лучше задавать словами через дефис
3.7) checked - флажки делаются по умолчанию отмеченными
3.8) placeholder - заполняет поле ввода (напр для подсказки), но не отправляет на сервер
3.9) name 
3.10) value
3.11) required - заполнение поля обязательно

4. Textarea - для ввода многострочного текста
Предварительный текст можно написать между открывающим ми закрывающим тэгами, но это работает как value, а не как placeholder

5. Select - создаёт поле с выпадающим списком
5.1 Option - вариант выбора

6. Label - ярлык. Для подписи перед полем ввода

атрибут:
for - для какого id применяется
(id - задаётся в поле ввода input)

6.1) Связывается с полем ввода либо через атрибут for (тогда тэги label и input равнозначны)
6.2) Либо связываются как родительский (label) и дочерний (input) элементы
<label>Имя
  <input type="text">
</label>


7. Для передачи данных на сервер используются 2 атрибута:
1) name - имя поля (обязательно)
2) value - значение - в него записывается то, что пользователь ввёл в поле

Формам option, input(supmit), input(reset) value задают явно
Если задать value текстовым полям, то значение будет предустановлено, но его можно изменить (при этом данные отправятся на сервер)

* я так понимаю данные будут передаваться в объекты на сервере, где name - ключ, а value - значение


8. Поле выбора - элемент формы со списком, где можно отметить один или несколько в-тов

Виды:
- с единичным выбором (radio)
- с множественным выбором (checkbox)

Пример checkbox:
<h2>Выберите жанры:</h2>
<label for="rock">Рок</label>
<input type="checkbox" name="genre" id="rock" value="rock">
<label for="pop">Поп</label>
<input type="checkbox" name="genre" id="pop" value="pop">
<label for="hiphop">Хип-хоп</label>
<input type="checkbox" name="genre" id="hiphop" value="hiphop">

Тут labels и inputs следуют друг за другом
При этом атрибут name у всех одинаковый

Пример radio:
<label for="yes">Да</label>
<input type="radio" name="choice" id="yes" value="yes">
<label for="no">Нет</label>
<input type="radio" name="choice" id="no" value="no"> 

Важно указывать в radio одинаковый атрибут name, иначе нельзя будет нажимать только на один вариант

атрибут checked делает флажки по умолчанию отмеченными




9. Особенности вёрстки
1) display: inline - по умолчанию для полей ввода и лейблов
2) поля ввода не наследуют некоторые стили от своих родителей (напр, шрифты).
Поэтому им следует давать наследование явно: inherit
3) для активных полей применяется псевдокласс :focus
по умолчанию в состоянии :focus элементы ввода окружены синей внешней линией, или обводкой
4) настраивается обводка элементов свойствами группы outline
input:focus {
 outline-color: yellow; /* цвет обводки — жёлтый */
 outline-style: dashed;/* стиль линии — прерывистая */
 outline-width: 3px; /* толщина обводки — 3px */
}
5) иногда outline сбрасывают, а состояние фокуса стилизуют с помощью border
input:focus {
 outline: none;
 border: 1px solid red;
}


10. Селекторы атрибутов:
input[type="submit"] {
    /* Стили для кнопки submit */
} 
Это не по БЭМ. По БЭМ лучше применить модификатор, тк если тэг input поменять на button, придётся менять селектор

11. Стилизация переключателей и полей ввода

checkbox, radio, range, select стилизуются браузером. Через CSS их оформить затруднительно

поэтому обычно используют приём визуального сокрытия элемента, а поверх создают аналог с собственным дизайном

1) Принципиально важно делать input дочерним элементом label.
2) Элемент скрывается через св-во clip(X1, Y1, X2, Y2)

clip: rect(0 0 0 0); - пример сокрытия
при этом лучше указать высоту и ширину в 1px (тк некоторые браузеры не видят безразмерных элементов)
и overflow: hidden

потом создаётся второй элемент, который стилизуется. как правило через span:
<label>
    <input type="checkbox" class="invisible-checkbox"> <!-- этот элемент мы скрыли -->
    <span class="visible-checkbox"></span> <!-- этот будем стилизовать -->
</label> 

В CSS span выделяется через селектор первого соседа:
input[type="checkbox"] + span {}

Различные состояния описываются через псевдоклассы :disabled, :checked, :focus


Все эти д-я упрощаются с помощью библиотек JS


12. Стилизация плейсхолдеров
Прописывается селектором с псевдоэлементов ::placeholder
input::placeholder {
    font-family: Arial;
} 

*в IE и Edge пишется с вендорным префиксом:
::-ms-input-placeholder

для всех браузеров:
input::-webkit-input-placeholder 
input::-moz-placeholder          
input::-ms-input-placeholder     
input::placeholder               


13. Для переноса строки в полях допускается использование тэга <br>