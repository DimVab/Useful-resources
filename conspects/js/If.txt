Условия
Запускаются, если значение true
1. Условия записываются так:
if () { };

 if (age > 18) {
    console.log('...');
} else {
    console.log('........');
}
или
 if (randomElement.length > 40) {
	advice.style.fontSize = "33px";
 }

1.1 Можно вложить условия else if между if и else. Выполняться будет первое верхнее, которое подойдёт

1.2 Можно вложить условие if c остановкой break (break - оператор):
for (let i = 1;  i < 10; i++) {
	if (i === 6) {
        break;
    }
    console.log(i);
}

2. Оператор continue
Пропускает шаг цикла, на котором он установлен
	if (i === 6) {
        continue;    - пропускает значение "6"

10.2 Условие может быть без сравнений: тогда всегда будет true (if (1) {}
Либо пустое (c нулём), тогда всегда будет false: if (0) {}

Условий мб несколько, тогда условия кроме первого и последнего начинаются с else if (*в Python было elif)

3. Условие можно написать с помощью тернарного оператора (у которого 3 операнда):
условие ? значение, если true : значение, если false

(num === 50) ? console.log('Ok!') : console.log('Error');
Здесь сначала идёт условие, затем д-е при true и действие при false. Использовались 2 оператора ? и :
Это единственный тернарный оператор в JS

const a = 5;
const b = a > 10 ? 5 : 0;
console.log(b); // 0, потому что a > 10 — false 

*главное отличие — тернарный оператор возвращает значение, а условная конструкция — нет  (??? не понял ???)
рекомендуется использовать, когда результат зависит от какого-нибудь логического выражения

4. Конструкция switch-case. Используется только для строгого сравнения (равно или не равно)

switch (peremennaya) {
	case: ...: (сюда подставляется переменная, и, если равна case, то выполняется код)
	 console.log('...!');
         break;     (останавливает выполнение, если равно)
default:
        console.log('...');
        break;
}
(default выполняется, если ни одно из условий case не подходит; необязательная конструкция)
*для последнего case писать break не нужно

** можно сразу для нескольких case написать один код:
case ...1
case ...2
case ...3
   code ...
   break;