1. Типы данных:
Простые типы (примитивы):
1) числа (пишутся без кавычек; с ними можно проводить математические операции) (мб целые и дробные (4.5 - с точкой) )
infinity - бесконечность (при делении на 0)
Nan - not a number - при смешивании чисел и строк (* Nan === Nan - false)
*если перед типом данных поставить +, то он станет числом (+"5" - число) (унарный плюс - плюс, который ставится перед чем-то)
** можно складывать со строкой (но не вычетать, умножать, делить и тп). будет строка
2) строки (string) (пишутся в кавычках (одинарных либо двойных); числа в кавычках становятся строками)
*если в строке есть кавычки, то строка пишется в других кавычках
** во общих случаях рекомендуется использовать одинарные кавычки
2.1) шаблонные строки - заключаются в обратные кавычки ``. Могут содержать переносы строки.
Могут содержать исчисляемые выражения внутри фигурных скобок ${...}
Внутри мб и операции и переменные
3) логический тип (boolean): true/false
4) null (отсутствие) (напр, если выводится переменная, которой нет) (или при ответе "отмена" в функции prompt)

5) undefined (существует, но без значения) (напр, если объявляется переменная, но ей не присваивается значение)
let _perem_
typeof _perem_   // undefined
либо let _perem_ = undefined (вручную задаётся)
Также появится, если не указать в функции, что она возвращает
Либо несуществующее свойство объекта

6) Symbol (символы)
7) BigInt (большие числа) (больше, чем 2^53)

- переменные

Комплексные (объекты):
-Объекты
-Специальные объекты:
(все нижеперечисленные не являются отдельными типами данных, а частными случаями объекта)
1) массивы []
2) Функции
3) Объект Даты
4) Регулярные выражения
5) Ошибки

Обычные объекты



Оператор typeof возвращает тип данных
Пишется в целом без скобок. Скобки только ставятся в выражениях
typeof:
Nan - number
null - object (баг такой)
function - function